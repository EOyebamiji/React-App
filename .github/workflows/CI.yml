name: Continous Integration

on:
  pull_request:
    branches: [develop, master]
  push:
    branches: [develop, master]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
    steps:
      - uses: actions/checkout@v3.0.2
      # Caching Node Modules from the project
      - name: Cache Node Modules
        uses: actions/cache@v3.0.8
        with:
          path: ~/.npm
          key: ${{ runner.os }}-NodeCache_Key-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-NodeCache_Key-

      - name: Define NodeJS Version
        uses: actions/setup-node@v3.5.0
        with:
          node-version: "18.x"
      # Install project dependencies
      - run: npm ci
      # Check code formatting based on script defined - Prettier
      - run: npm run format:check
      - run: npm rum format
      # Run Automated tests
      - run: npm test -- --coverage
        # Define enviromental variable to avoid interactive terminal
        env:
          CI: true
      # Upload generated code coverage as an Artifact
      - name: Upload Generated Test Code coverage as an Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: Code-Coverage
          path: coverage

      # Workflow to trigger when there is a push to the develop repo
      - name: Build project
        if: github.event_name == 'push'
        run: |
          npm run build
          npm install -g surge
      # Upload generated code coverage as an Artifact
      - name: Upload Build Folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3.1.0
        with:
          name: build
          path: build
      # Release using semantic release and coventional commits
      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_CUSTOM_TOKEN }}

      #Worlflow to deploy to staging env
      - name: Deploy to Staging
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: surge --project ./build --domain http://honorable-bait.surge.sh/

      #Workflow to deploy to production env
      - name: Deploy to Production
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: surge --project ./build --domain https://smooth-boy.surge.sh/

      #Wrokflow to upload coverage reports into Codecov
      - name: Upload Coverage Reports
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      #Workflow to automatically open an issue if a workflow fails
      - name: Open Issues For Failed Jobs
        if: failure() && github.event_name == 'pull_request'
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
            "assignees": ["${{ github.event.pull_request.user.login }}"]
            }'


      - name: Open Issue
        if: failure() && github.event_name == 'pull_request'
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.SEMANTIC_CUSTOM_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_.",
            "assignees": ["${{ github.event.pull_request.user.login }}"]
            }'
 